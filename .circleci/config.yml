### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1
references:
    tag_filter: &tag_filter
      filters:
        tags:
          only: /^v\d+\.\d+\.\d+$/

    create_requirement_files: &create_requirement_files
      run:
        name: Create requirement files
        command: |
          pip install pipfile-requirements
          pipfile2req > requirements.txt
          pipfile2req -d > requirements-dev.txt

    restore_tox_37_cache: &restore_tox_37_cache
      restore_cache:
        key: tox-37-cache-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}

    save_tox_37_cache: &save_tox_37_cache
      save_cache:
        key: tox-37-cache-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}
        paths:
          - .tox/py37

jobs:
  tox3-7-unit-tests:
      # docker image circleci/python:3.8.3-buster-node also contains python 3.7
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - *create_requirement_files
        - *restore_tox_37_cache
        - run:
            # install npm modules so readme tests run with mdx verification
            name: npm install
            command: |
              npm ci
        - run:
            name: Setup Tox
            command: |
              pip install tox
        - run:
            name: Tox build
            no_output_timeout: 15m
            command: |
              tox -e py37 -v
        - *save_tox_37_cache

  tox3-8-unit-tests:
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - *create_requirement_files
        - restore_cache:
            key: tox-38-cache-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}
        - run:
            # install npm modules so readme tests run with mdx verification
            name: npm install
            command: |
              npm ci
        - run:
            name: Setup Tox
            command: |
              pip install tox
        - run:
            name: Tox build
            no_output_timeout: 15m
            command: |
              tox -e py38 -v -- --cov=email-parser --cov-report=html
        - store_artifacts:
            path: coverage_html_report
        - run:
            name: Coveralls upload
            command: |
              if [ -n "$COVERALLS_REPO_TOKEN" ]; then
                pip install coveralls
                coveralls
              else
                echo "Skipping coveralls"
              fi

  prepare-tox3-7:
    docker:
      - image: circleci/python:3.8.3-buster-node
    steps:
      - checkout
      - *create_requirement_files
      - *restore_tox_37_cache
      - run:
          # install npm modules so readme tests run with mdx verification
          name: npm install
          command: |
            npm ci
      - run:
          name: Setup Tox
          command: |
            pip install tox
      - run:
          name: Tox build
          command: |
            tox -e py37 --notest
      - *save_tox_37_cache
      - persist_to_workspace:
          root: ~/project
          paths:
            - .tox

  deploy:
      docker:
        - image: circleci/python:3.8.3-buster
      steps:
        - checkout
        - run:
            name: Deploy
            when: always
            command: |
              ./email_parser/utils/deploy.sh
workflows:
  version: 2.1
  build_and_release:
    jobs:
      - tox3-7-unit-tests:
          <<: *tag_filter
      - tox3-8-unit-tests:
          <<: *tag_filter
      - prepare-tox3-7:
          <<: *tag_filter
      - deploy:
          <<: *tag_filter
          requires:
            - tox3-7-unit-tests
            - tox3-8-unit-tests
